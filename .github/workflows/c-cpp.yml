name: C/C++ CI

on:
  push:
    branches: [ tests ]
  pull_request:
    branches: [ tests ]

jobs:
  unix:
    #if: ${{ false }} # disable for now
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: x86_64-apple-darwin
            COMPILER: clang
            LINKER: clang
            LIBRARY_PATH: $LIBRARY_PATH
            CPP_COMPILER: clang++
            BUILD_SCRIPT: build_unix_tests.sh
            RUN_SCRIPT: run_tests.sh
            SETUP_SCRIPT: |
              chmod a+rwx ./build_unix_tests.sh
              chmod a+rwx ./run_tests.sh


          - os: ubuntu-latest
            TARGET: armv7-unknown-linux-musleabihf
            COMPILER: arm-linux-gnueabihf-gcc-5
            LINKER: gcc-5-arm-linux-gnueabihf
            LIBRARY_PATH: $LIBRARY_PATH
            CPP_COMPILER: g++
            BUILD_SCRIPT: build_unix_tests.sh
            RUN_SCRIPT: run_tests.sh
            SETUP_SCRIPT: |
              chmod a+rwx ./build_unix_tests.sh
              chmod a+rwx ./run_tests.sh
  
          - os: ubuntu-latest
            TARGET: x86_64-unknown-linux-musl
            COMPILER: gcc
            LINKER: gcc
            LIBRARY_PATH: $LIBRARY_PATH
            CPP_COMPILER: g++
            BUILD_SCRIPT: build_unix_tests.sh
            RUN_SCRIPT: run_tests.sh
            SETUP_SCRIPT: |
              chmod a+rwx ./build_unix_tests.sh
              chmod a+rwx ./run_tests.sh

          - os: ubuntu-18.04
            COMPILER: gcc
            LINKER: gcc
            CPP_COMPILER: g++-3.4
            LIBRARY_PATH: /usr/lib/x86_64-linux-gnu:$LIBRARY_PATH
            BUILD_SCRIPT: build_unix_tests.sh
            RUN_SCRIPT: run_tests.sh
            SETUP_SCRIPT: |
              echo "deb     [trusted=yes] http://old-releases.ubuntu.com/ubuntu/ hardy universe" | sudo tee -a /etc/apt/sources.list
              echo "deb-src [trusted=yes] http://old-releases.ubuntu.com/ubuntu/ hardy universe" | sudo tee -a /etc/apt/sources.list
              #echo "deb     http://snapshot.debian.org/archive/debian/20070730T000000Z/ lenny main" | sudo tee -a /etc/apt/sources.list
              #echo "deb-src http://snapshot.debian.org/archive/debian/20070730T000000Z/ lenny main" | sudo tee -a /etc/apt/sources.list
              #echo "deb     http://snapshot.debian.org/archive/debian-security/20070730T000000Z/ lenny/updates main" | sudo tee -a /etc/apt/sources.list
              #echo "deb-src http://snapshot.debian.org/archive/debian-security/20070730T000000Z/ lenny/updates main" | sudo tee -a /etc/apt/sources.list
              sudo apt-get update
              sudo -E apt-get -yq --no-install-suggests --no-install-recommends install gcc-3.4 g++-3.4 gcc-multilib g++-multilib
              dpkg --list | grep compiler
              sudo /sbin/ldconfig -p | grep libgcc
              sudo ln -s /lib/x86_64-linux-gnu/libgcc_s.so.1 /lib/libgcc_s.so.1
              chmod a+rwx ./build_unix_tests.sh
              chmod a+rwx ./run_tests.sh

          - os: ubuntu-18.04
            COMPILER: gcc
            LINKER: gcc
            CPP_COMPILER: g++-4.4
            LIBRARY_PATH: $LIBRARY_PATH
            BUILD_SCRIPT: build_unix_tests.sh
            RUN_SCRIPT: run_tests.sh
            SETUP_SCRIPT: |
              echo "deb     [trusted=yes] http://old-releases.ubuntu.com/ubuntu/ hardy universe" | sudo tee -a /etc/apt/sources.list
              echo "deb-src [trusted=yes] http://old-releases.ubuntu.com/ubuntu/ hardy universe" | sudo tee -a /etc/apt/sources.list
              echo "deb     [trusted=yes] http://snapshot.debian.org/archive/debian/20070730T000000Z/ lenny main" | sudo tee -a /etc/apt/sources.list
              echo "deb-src [trusted=yes] http://snapshot.debian.org/archive/debian/20070730T000000Z/ lenny main" | sudo tee -a /etc/apt/sources.list
              echo "deb     [trusted=yes] http://snapshot.debian.org/archive/debian-security/20070730T000000Z/ lenny/updates main" | sudo tee -a /etc/apt/sources.list
              echo "deb-src [trusted=yes] http://snapshot.debian.org/archive/debian-security/20070730T000000Z/ lenny/updates main" | sudo tee -a /etc/apt/sources.list
              sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test"
              sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu/ trusty main'
              sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu/ trusty universe'
              sudo apt-get update
              sudo -E apt-get -yq --no-install-suggests --no-install-recommends install g++-4.4
              dpkg --list | grep compiler
              #sudo /sbin/ldconfig -p | grep libgcc
              #sudo ln -s /lib/x86_64-linux-gnu/libgcc_s.so.1 /lib/libgcc_s.so.1
              chmod a+rwx ./build_unix_tests.sh
              chmod a+rwx ./run_tests.sh      
    
    steps:
    - uses: actions/checkout@v2
    - name: setup enviroment
      run: ${{matrix.SETUP_SCRIPT}}
    - name: build tests
      env:
        COMPILER: ${{ matrix.CPP_COMPILER }}
        LIBRARY_PATH: ${{ matrix.LIBRARY_PATH }}
      run: |
        ./${{ matrix.BUILD_SCRIPT }} service
    - name: run tests
      run: |
        ./${{ matrix.RUN_SCRIPT }}
